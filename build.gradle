plugins {
    id 'java'
    id "io.qameta.allure" version "2.9.4"
}

group 'com.aero.test'
version '1.0'

compileJava {
    options.encoding = 'UTF-8'
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    maven {
        url "https://jitpack.io"
    }
}

// dependency versions
def selenideVersion = "5.14.2"
def allureVersion = "2.12.0"
def testngVersion = "6.14.0"
def logVersion = "2.14.1"


dependencies {
    testImplementation "com.codeborne:selenide:$selenideVersion"
    testImplementation "io.qameta.allure:allure-selenide:$allureVersion"
    testImplementation "io.qameta.allure:allure-java-commons:$allureVersion"
    testImplementation "io.qameta.allure:allure-testng:$allureVersion"
    testImplementation "org.testng:testng:$testngVersion"
    testImplementation 'org.aspectj:aspectjweaver:1.8.10'
    testImplementation "io.qameta.allure.gradle.allure:allure-plugin:2.9.4"
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:$logVersion"
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'com.google.code.gson:gson:2.8.8'
}

allure {
    version = allureVersion
    useTestNG {
        version = allureVersion
    }
}

def suiteProperty = System.getProperty("suite","base")
def suite = "src/test/resources/suites/${suiteProperty}.xml"
test {
    systemProperties = System.properties
    useTestNG {
        suites suite
    }
}


